{"version":3,"sources":["components/ui/AddProductItemForm.js","components/ui/AddMaterialItemForm.js","components/ui/ProductItem.js","components/ui/ProductItemList.js","components/ui/MaterialItem.js","components/ui/MaterialItemList.js","components/ui/ShowResult.js","components/ui/CalculationFrom.js","constants.js","actions.js","components/containers.js","components/App.js","functions/FunctionForRPGMO.js","store/Reducers.js","store/index.js","serviceWorker.js","index.js"],"names":["AddItemForm","_ref","_title","_minLv","_minPr","_maxPr","_value","_exp","_ref$onNewItem","onNewItem","f","react_default","a","createElement","className","onSubmit","e","preventDefault","value","ref","input","type","placeholder","required","AddMaterialItemForm","_amount","ProductItem","title","minLv","minPr","maxLv","maxPr","exp","_ref$onRemove","onRemove","onClick","ProductItemList","_ref$items","items","length","map","item","ui_ProductItem","Object","assign","key","id","MaterialItem","amount","MaterialItemList","ui_MaterialItem","Showresult","_ref$calresult","calresult","_ref$onclearResult","onclearResult","productNames","materialNames","productValues","materialValues","needAmounts","totalAmount","productAmounts","materialAmounts","keys","join","i","concat","CalculationForm","_nowlevel","_targetlevel","_nextexp","_ref$onCalculation","onCalculation","constants","ADD_PRODUCTITEM","ADD_MATERIALITEM","REMOVE_ITEM","CALCULATION_RESULT","CLEAR_RESULT","removeItem","C","NewMaterialItem","connect","dispatch","v4","timestamp","Date","toString","addMaterialItem","NewProductItem","parseInt","addProductItem","AddProductItemForm","MaterialItems","state","toConsumableArray","ProductItems","Calculation","nowlevel","targetlevel","nextexp","calculationResult","ShowItem","App","containers_MaterialItems","containers_ProductItems","Exp","Lv","TotalExp","Math","round","RanExp","start","final","GetPb","OBJECT","ArrayPb","PRODUCTARRAY","EXP","Array","LOSSPRO8","ith","k","GetProductTotalExp","EXPARRAY","arguments","undefined","action","filter","Calresult","AMOUNT","productitems","materialitems","STARTEXP","STARTLv","TARGETLv","ONEEXP","ceil","WorkingCount","AMOUNTARRAY","fill","PRO8ARRAY","GetProductAmount","logger","store","next","result","console","groupCollapsed","log","getState","groupEnd","saver","localStorage","JSON","stringify","storeFactory","initialState","stateData","applyMiddleware","createStore","combineReducers","parse","Boolean","window","location","hostname","match","React","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8d4db10.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst AddItemForm = ({onNewItem=f=>f}) => {\n\n    let _title, _minLv, _minPr, _maxPr, _value, _exp\n\n    const submit = e => {\n        e.preventDefault()\n        onNewItem(_title.value, _minLv.value, _minPr.value, _maxPr.value, _value.value, _exp.value)\n        _title.value = ''\n        _minLv.value = ''\n        _minPr.value = ''\n        _maxPr.value = ''\n        _value.value = ''\n        _exp.value = ''\n        e.preventDefault()\n    }\n\n    return (\n       <form className=\"add-Item\" onSubmit={submit}>\n       <table>\n       <tbody>\n       <tr>\n              <td>物品名稱</td>\n              <td><input ref={input => _title = input} type=\"text\" placeholder=\"物品名稱\" required/></td>\n       </tr>\n       <tr>\n              <td>起始等級</td>\n              <td><input ref={input => _minLv = input} type=\"number\" placeholder=\"起始等級\" required/></td>\n       </tr>\n       <tr>\n              <td>下限機率</td>\n              <td><input ref={input => _minPr = input} type=\"number\" placeholder=\"下限機率\" required/></td>\n       </tr>\n       <tr>\n              <td>上限機率</td>\n              <td><input ref={input => _maxPr = input} type=\"number\" placeholder=\"上限機率\" required/></td>\n       </tr>\n       <tr>\n              <td>系統價格</td>\n              <td><input ref={input => _value = input} type=\"number\" placeholder=\"系統價格\" required/></td>\n       </tr>\n       <tr>\n              <td>經驗值</td>\n              <td><input ref={input => _exp = input} type=\"number\" placeholder=\"經驗值\" required/></td>\n       </tr>\n       </tbody>\n       </table>\n       <button>ADD</button>\n       </form>\n    )\n\n}\n\nAddItemForm.propTypes = {\n    onNewColor: PropTypes.func\n}\n\nexport default AddItemForm","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst AddMaterialItemForm = ({onNewItem=f=>f}) => {\n\n    let _title, _amount ,_value\n\n    const submit = e => {\n        e.preventDefault()\n        onNewItem(_title.value, _amount.value, _value.value)\n        _title.value = ''\n        _amount.value = ''\n        _value.value = ''\n        e.preventDefault()\n    }\n\n    return (\n       <form className=\"add-Item\" onSubmit={submit}>\n       <table>\n       <tbody>\n       <tr>\n              <td>物品名稱</td>\n              <td><input ref={input => _title = input} type=\"text\" placeholder=\"物品名稱\" required/></td>\n       </tr>\n       <tr>\n              <td>需求量</td>\n              <td><input ref={input => _amount = input} type=\"number\" placeholder=\"需求量\" required/></td>\n       </tr>\n       <tr>\n              <td>系統價格</td>\n              <td><input ref={input => _value = input} type=\"number\" placeholder=\"系統價格\" required/></td>\n       </tr>\n       </tbody>\n       </table>\n       <button>ADD</button>\n       </form>\n    )\n\n}\n\nAddMaterialItemForm.propTypes = {\n    onNewColor: PropTypes.func\n}\n\nexport default AddMaterialItemForm","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst ProductItem = ({ title, minLv, minPr, maxLv, maxPr, value, exp, onRemove=f=>f}) =>\n    <section className=\"item\">\n        <h1>{title}</h1>\n        <button onClick={onRemove}>X</button>\n        <p>下限等級:{minLv}，下限機率:{minPr}</p>\n        <p>上限等級:{maxLv}，上限機率:{maxPr}</p>\n        <p>系統價格:{value}，經驗值:{exp}</p>\n    </section>\n\nProductItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    onRemove: PropTypes.func,\n}\n\nexport default ProductItem","import React from 'react';\nimport PropTypes from 'prop-types'\nimport ProductItem from './ProductItem'\n\nconst ProductItemList = ({ items=[], onRemove=f=>f }) =>\n    <div className=\"Item-list\">\n        {(items.length === 0) ?\n            <p>沒有物品</p> :\n            items.map(item =>\n                <ProductItem key={item.id}\n                       {...item}\n                       onRemove={() => onRemove(item.id)} />\n            )\n        }\n    </div>\n\nProductItemList.propTypes = {\n    items: PropTypes.array,\n    onRemove: PropTypes.func\n}\n\nexport default ProductItemList","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst MaterialItem = ({ id, title, amount, value, onRemove=f=>f}) =>\n    <section className=\"item\">\n        <h1>第{id + 1}種原料</h1>\n        <button onClick={onRemove}>X</button>\n        <p>原料名稱:{title}</p>\n        <p>原料用量:{amount}</p>\n        <p>原料價格:{value}</p>\n    </section>\n\nMaterialItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    amount: PropTypes.number,\n    onRemove: PropTypes.func,\n}\n\nexport default MaterialItem","import React from 'react';\nimport PropTypes from 'prop-types'\nimport MaterialItem from './MaterialItem'\n\nconst MaterialItemList = ({ items=[], onRemove=f=>f }) =>\n    {\n        return <div className=\"Item-list\">\n            {(items.length === 0) ?\n                <p>沒有物品</p> :\n                items.map(item => <MaterialItem key={item.id} {...item} onRemove={() => onRemove(item.id)} />)}\n        </div>;\n    }\n\nMaterialItemList.propTypes = {\n    items: PropTypes.array,\n    onRemove: PropTypes.func\n}\n\nexport default MaterialItemList","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst Showresult = ({ calresult={}, onclearResult=f=>f}) =>\n    {\n        const { productNames, materialNames, productValues, materialValues, needAmounts, totalAmount, productAmounts, materialAmounts } = calresult;\n        return ( Object.keys(calresult) <= 0 ) ?\n                <p></p> :\n                <section className=\"item\">\n                    <p>生產順序:{productNames.join(\" => \")}</p>\n                    <p>原料名單:{materialNames.map((item, i ) => `${item}需要${needAmounts[i]}個`).join(\", \")}</p>\n                    <p>總生產次數:{totalAmount}</p>\n                    <p>成品總生產量:{productNames.map((item, i ) => `${item}生產${productAmounts[i]}個共${productValues[i] * productAmounts[i]}元`).join(\", \")}</p>\n                    <p>原料總需求量:{materialNames.map((item, i ) => `${item}需要${materialAmounts[i]}個共${materialValues[i] * materialAmounts[i]}元`).join(\", \")}</p>\n                    <button onClick={onclearResult}>清除結果</button>\n                </section>\n    }\n\nShowresult.propTypes = {\n    calresult: PropTypes.object,\n}\n\n\nexport default Showresult","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst CalculationForm = ({onCalculation=f=>f}) => {\n\n    let _nowlevel, _targetlevel, _nextexp\n\n    const submit = e => {\n        e.preventDefault()\n        onCalculation(_nowlevel.value, _targetlevel.value, _nextexp.value)\n        e.preventDefault()\n    }\n\n    return (\n       <form className=\"add-Item\" onSubmit={submit}>\n              <input ref={input => _nowlevel = input}\n                     type=\"number\"\n                     placeholder=\"起始等級\" required/>\n              <input ref={input => _targetlevel = input}\n                     type=\"number\"\n                     placeholder=\"目標等級\" required/>\n              <input ref={input => _nextexp = input}\n                     type=\"number\"\n                     placeholder=\"下個等級所需經驗值\" required/>\n              <button>計算結果</button>\n       </form>\n    )\n\n}\n\nCalculationForm.propTypes = {\n       onCalculation: PropTypes.func\n}\n\nexport default CalculationForm","const constants = {\n    ADD_PRODUCTITEM: \"ADD_PRODUCTITEM\",\n    ADD_MATERIALITEM: \"ADD_MATERIALITEM\",\n    REMOVE_ITEM: \"REMOVE_ITEM\",\n    CALCULATION_RESULT: \"CALCULATION_RESULT\",\n    CLEAR_RESULT: \"CLEAR_RESULT\"\n}\n\nexport default constants","import C from './constants'\nimport { v4 } from 'uuid'\n\nexport const addProductItem = ( title, minLv, minPr, maxPr, value, exp) =>({\n    type: C.ADD_PRODUCTITEM,\n    id: v4(),\n    title,\n    minLv,\n    minPr ,\n    maxLv: parseInt(maxPr,10) - parseInt(minPr,10) + parseInt(minLv,10) , \n    maxPr: maxPr / 100 ,\n    value,\n    exp,\n    timestamp: new Date().toString()\n})\nexport const addMaterialItem = ( title, amount, value) =>({\n    type: C.ADD_MATERIALITEM,\n    id: v4(),\n    title,\n    amount,\n    value,\n    timestamp: new Date().toString()\n})\nexport const removeItem = id => ({\n    type: C.REMOVE_ITEM,\n    id\n})\nexport const calculationResult = ( MaterialItems, ProductItems,nowlevel, targetlevel, nextexp) =>({\n    type: C.CALCULATION_RESULT,\n    MaterialItems,\n    ProductItems,\n    nowlevel,\n    targetlevel,\n    nextexp\n})\nexport const clearResult = () => ({\n    type: C.CLEAR_RESULT\n})","import { connect } from 'react-redux'\nimport AddProductItemForm from './ui/AddProductItemForm';\nimport AddMaterialItemForm from './ui/AddMaterialItemForm';\nimport ProductItemList from './ui/ProductItemList';\nimport MaterialItemList from './ui/MaterialItemList';\nimport Showresult from './ui/ShowResult'\nimport CalculationForm from './ui/CalculationFrom' ;\nimport { addMaterialItem, addProductItem, removeItem, calculationResult, clearResult} from '../actions'\n\nexport const NewMaterialItem = connect(\n    null,\n    dispatch => ({\n        onNewItem(title, amount, value) {\n            dispatch(addMaterialItem(title, amount, value))\n        }\n    })\n)(AddMaterialItemForm)\n\nexport const NewProductItem = connect(\n    null,\n    dispatch => ({\n        onNewItem(title, minLv, minPr, maxPr, value, exp) {\n            dispatch(addProductItem(title, minLv, minPr, maxPr, value, exp))\n        }\n    })\n)(AddProductItemForm)\n\nexport const MaterialItems = connect(\n    state => ({\n        items: [...state.MaterialItems]\n    }),\n    dispatch =>\n    ({\n        onRemove(id) {\n            dispatch(removeItem(id))\n        }\n    })\n)(MaterialItemList)\n\n\nexport const ProductItems = connect(\n    state => ({\n        items: [...state.ProductItems]\n    }),\n    dispatch => \n    ({\n        onRemove(id) {\n            dispatch(removeItem(id))\n        }\n    })\n)(ProductItemList)\n\nexport const Calculation = connect(\n    null,\n    dispatch =>({\n        onCalculation(nowlevel, targetlevel, nextexp) {\n            dispatch(calculationResult(nowlevel, targetlevel, nextexp))\n        }\n    })\n)(CalculationForm)\n\nexport const ShowItem = connect(\n    state => ({\n        calresult: state.calresult\n    }),\n    dispatch =>({\n        onclearResult() {\n            dispatch(clearResult())\n        }\n    })\n)(Showresult)","import React from 'react'\nimport { NewMaterialItem, NewProductItem, MaterialItems, ProductItems, Calculation, ShowItem} from './containers';\nimport '../stylesheets/App.css'\n\nconst App = () => \n<div className=\"app\" >\n  <div>\n    <NewMaterialItem />\n    <NewProductItem />\n    <Calculation />\n    <ShowItem />\n  </div>\n  <div>\n    <MaterialItems />\n  </div>\n  <div>\n    <ProductItems />\n  </div>\n</div>\n\nexport default App;\n\n\n\n/*\n//舊版\nimport React, { Component } from 'react';\nimport './App.css';\nimport AddProductItemForm from './AddProductItemForm';\nimport AddMaterialItemForm from './AddMaterialItemForm';\nimport ProductItemList from './ProductItemList';\nimport MaterialItemList from './MaterialItemList';\nimport Showresult from './ShowResult'\nimport CalculationForm from './CalculationFrom' ;\nimport { WorkingCount , GetProductAmount , GetMaterialAmount } from '../functions/FunctionForRPGMO' ;\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n        materialitems: [{\n          id: 0,\n          title: \"coal\",\n          amount: 1,\n          value: 500,\n        },\n        {\n          id: 1,\n          title: \"iron orc\",\n          amount: 1,\n          value: 180,\n        }],\n        productitems: [{\n          id: 0,\n          title: \"steel bar\",\n          minLv: 40,\n          minPr: 0.4,\n          maxLv: 100 , \n          maxPr: 1,\n          value: 960,\n          exp: 30,\n        }],\n        calresult: {\n          nowlevel: 100,\n          targetlevel: 110,\n          nextexp: 100,\n        }\n    }\n    this.addProductItem = this.addProductItem.bind(this)\n    this.addMaterialItem = this.addMaterialItem.bind(this)\n    this.removeItem = this.removeItem.bind(this)\n    this.calculationResult = this.calculationResult.bind(this)\n    this.clearResult = this.clearResult.bind(this)\n  }\n  \n  addProductItem( title, minLv, minPr, maxPr, value, exp) {\n    let olditems = this.state.productitems\n    const newitems = [\n      ...olditems,\n      {\n          id: olditems.length,\n          title,\n          minLv,\n          minPr: minPr / 100 ,\n          maxLv: parseInt(maxPr,10) - parseInt(minPr,10) + parseInt(minLv,10) , \n          maxPr: maxPr / 100 ,\n          value,\n          exp,\n      }\n    ]\n    this.setState({productitems: newitems})\n  }\n  addMaterialItem(title, amount ,value) {\n    let olditems = this.state.materialitems\n    const newitems = [\n      ...olditems,\n      {\n          id: olditems.length,\n          title,\n          amount,\n          value,\n      }\n    ]\n    this.setState({materialitems: newitems})\n  }\n  removeItem(no, items, id) {\n    const Newitems = items.filter(item => item.id !== id)\n    if (no === 1)\n    {\n      this.setState({materialitems: Newitems })\n    }\n    else\n    {\n      this.setState({productitems: Newitems })\n    }\n  }\n  calculationResult(nowlevel, targetlevel, nextexp) {    \n    let productitems = this.state.productitems\n    let materialitems = this.state.materialitems\n    let totalAmount = WorkingCount(productitems,nextexp,nowlevel,targetlevel)\n    let productAmounts = GetProductAmount(productitems,nextexp,nowlevel,targetlevel)\n    let needAmounts = materialitems.map( item => item.amount)\n    let materialAmounts = GetMaterialAmount(needAmounts,totalAmount)\n    this.setState({calresult: {\n      productNames: productitems.map(item => item.title),\n      materialNames: materialitems.map( item => item.title),\n      productValues: productitems.map( item => item.value),\n      materialValues: materialitems.map( item => item.value),\n      needAmounts: needAmounts,\n      totalAmount: totalAmount,\n      productAmounts: productAmounts,\n      materialAmounts: materialAmounts\n     } })\n  }\n  clearResult() {\n    this.setState({calresult: {} })\n  }\n\n  render() {\n    const {addProductItem, addMaterialItem, removeItem, calculationResult, clearResult} = this\n    const { materialitems, productitems, calresult} = this.state\n    return (\n      <div className=\"App\">\n        <div>\n          <AddMaterialItemForm onNewItem={addMaterialItem} />\n          <AddProductItemForm onNewItem={addProductItem} />\n          {\n            ((materialitems.length === 0) || (productitems.length === 0)) ?\n            <p></p> :\n            <CalculationForm onCalculation={calculationResult} />\n          }\n          {(calresult.length === 0 ) ? <p></p> : <button onClick={clearResult}>清除結果</button> }\n          <Showresult calresult={calresult} />\n        </div>\n        <div>\n          <MaterialItemList items={materialitems} key={1} onRemove={(id) => removeItem(1, materialitems, id)} />\n        </div>\n        <div>\n          <ProductItemList items={productitems} key={2} onRemove={(id) => removeItem(2, productitems, id)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n*/","//計算用函數\n// 傳回二個等級間所需經驗\nconst Exp = (Lv) =>  \n{\n    let TotalExp = 1;\n    for ( let i = 1; i < Lv ; i++)\n    {\n        TotalExp *= 1.11;\n    }\n    return ( Lv <= 1 ) ? 0 : Math.round( ( TotalExp -1 ) * 5000 / 11 )\n}\nexport const RanExp = (start, final) => Exp(final) - Exp(start)\n// 傳回某一個成品在特定等級的成功率\nexport const GetPb = ( OBJECT , Lv ) =>\n{\n    if ( OBJECT.minPr === OBJECT.maxPr )\n        return OBJECT.maxPr\n    if ( OBJECT.maxLv <= Lv )\n        return OBJECT.maxPr\n    if ( OBJECT.minLv > Lv )\n        return 0\n\tif ( OBJECT.minLv <= Lv )\n        return ( OBJECT.minPr + ( Lv - OBJECT.minLv ) * 0.01 )\n}\n//傳回特定等級時的產品成功率\nexport const ArrayPb = (PRODUCTARRAY,Lv) => \n{\n    let EXP = new Array(PRODUCTARRAY.length)\n    let LOSSPRO8 = 1 \n    for (let i = 0 , ith = PRODUCTARRAY.length; i < ith ; i++ )\n    {\n        var k = GetPb( PRODUCTARRAY[i], Lv)                    \n        EXP[i] = k * LOSSPRO8 //物品經驗值=本身成功率*成功經驗值*前面物品失敗率\n        LOSSPRO8 *= ( 1 - k ) //本次物品失敗率=前面物品失敗率 * (1 - 本身成功率)\n    }\n    return EXP ;\n}\n//傳回特定等級時的產品總經驗\nexport const GetProductTotalExp = (PRODUCTARRAY,Lv) => \n{\n    let EXP = 0 \n    let EXPARRAY = ArrayPb(PRODUCTARRAY,Lv) \n    for (var i = 0 , ith = EXPARRAY.length; i < ith ; i++ )\n        EXP += EXPARRAY[i] * PRODUCTARRAY[i].exp  \n    return EXP\n}\n//傳回在特定等級區間所需要工作的次數\nexport const WorkingCount = (PRODUCTARRAY,STARTEXP,STARTLv,TARGETLv) => \n{\n    let AMOUNT = 0\n    let EXP = STARTEXP\n    for (let i = STARTLv; i < TARGETLv; i++)\n    {\n        //計算這個等級需要的製作次數\n        let ONEEXP = GetProductTotalExp(PRODUCTARRAY,i) \n        if ( ONEEXP > 0)\n        {\n            let k = Math.ceil(EXP / ONEEXP) \n            AMOUNT += k \n            EXP -= ( k * ONEEXP ) \n        }\n        else\n        {\n            AMOUNT += 0 \n            EXP = 0 ;        \n        }\n        //重新計算升到下一個等級所需的經驗值\n        EXP += RanExp( (i + 1), (i + 2))\n    }\n    return AMOUNT\n}\n//傳回在特定等級區間所製造的成品量\nexport const GetProductAmount = (PRODUCTARRAY,STARTEXP,STARTLv,TARGETLv) => \n{\n    let AMOUNTARRAY = Array(PRODUCTARRAY.length).fill(0)\n    let EXP = parseInt(STARTEXP,10) ;\n    for (let i = STARTLv ; i < TARGETLv; i++)\n    {\n        //計算這個等級需要的製作次數\n        let PRO8ARRAY = ArrayPb(PRODUCTARRAY,i) ;\n        let ONEEXP = GetProductTotalExp(PRODUCTARRAY,i) ;\n        if  ( ONEEXP > 0 )\n        {\n\t\t\t//計算這個等級產品的製造量\n            let k = Math.ceil(EXP / ONEEXP)\n            for (let i = 0 , ith = PRODUCTARRAY.length; i < ith ; i++ )\n                AMOUNTARRAY[i] += ( k * PRO8ARRAY[i] )\n\t\t\tEXP -= ( k * ONEEXP )\n        }\n        else\n        {\n            for (let i = 0 , ith = PRODUCTARRAY.length; i < ith ; i++ )\n            {\n                AMOUNTARRAY[i] += 0 ;\n            }\n            EXP = 0 ;        \n        }\n        //重新計算升到下一個等級所需的經驗值\n        EXP += RanExp( (i + 1), (i + 2)) ;    \n    }\n    return AMOUNTARRAY ;\n}\n//根據用量陣列和工作次數，傳回總用量陣列\nexport const GetMaterialAmount = (NEEDARRAY,AMOUNT) => NEEDARRAY.map(item => item * AMOUNT)\n\n\n\n","import C from '../constants' ;\nimport { WorkingCount , GetProductAmount , GetMaterialAmount } from '../functions/FunctionForRPGMO' ;\n\nexport const ProductItem = (state={}, action) => {\n    switch (action.type) {\n        case C.ADD_PRODUCTITEM:\n        return {\n            id: action.id,\n            title: action.title,\n            minLv: action.minLv,\n            minPr: action.minPr / 100 ,\n            maxLv: parseInt(action.maxPr,10) - parseInt(action.minPr,10) + parseInt(action.minLv,10) , \n            maxPr: action.maxPr / 100 ,\n            value: action.value,\n            exp: action.exp\n        }\n        default :\n        return state\n    \n    }\n}\nexport const ProductItems = (state={}, action) => {\n    switch (action.type) {\n        case C.ADD_PRODUCTITEM:\n            return [\n                ...state,\n                ProductItem({},action)\n            ]\n        case C.REMOVE_ITEM:\n            return state.filter(item => item.id !== action.id)\n        default :\n            return state\n    }\n}\nexport const MaterialItem = (state={}, action) => {\n    switch (action.type) {\n        case C.ADD_MATERIALITEM:\n        return {\n            id: action.id,\n            title: action.title,\n            amount: action.amount,\n            value: action.value\n        }\n        default :\n        return state\n    }\n}\nexport const MaterialItems = (state={}, action) => {\n    switch (action.type) {\n        case C.ADD_MATERIALITEM:\n        return [\n            ...state,\n            MaterialItem({},action)\n        ]\n        case C.REMOVE_ITEM:\n        return state.filter(item => item.id !== action.id)\n        default :\n        return state\n    }\n}\nexport const Calresult = (state={}, action) => {\n    switch (action.type) {\n        case C.CALCULATION_RESULT:\n        {\n            let productitems = action.productitems\n            let materialitems = action.materialitems\n            let totalAmount = WorkingCount(productitems,action.nextexp,action.nowlevel,action.targetlevel)\n            let productAmounts = GetProductAmount(productitems,action.nextexp,action.nowlevel,action.targetlevel)\n            let needAmounts = materialitems.map( item => item.amount)\n            let materialAmounts = GetMaterialAmount(needAmounts,totalAmount)\n            return {\n                    productNames: productitems.map(item => item.title),\n                    materialNames: materialitems.map( item => item.title),\n                    productValues: productitems.map( item => item.value),\n                    materialValues: materialitems.map( item => item.value),\n                    needAmounts: needAmounts,\n                    totalAmount: totalAmount,\n                    productAmounts: productAmounts,\n                    materialAmounts: materialAmounts\n                   }\n        }\n        case C.CLEAR_RESULT:\n            return {}\n        default :\n            return state\n    }\n}","import {createStore, combineReducers, applyMiddleware } from 'redux'\nimport {ProductItems, MaterialItems, Calresult} from './Reducers'\nimport stateData from '../data/initialState.json'\n\n/*\n因為學不會使用HOC,這裡的程式碼是照抄\nhttps://github.com/MoonHighway/learning-react/blob/master/chapter-09/color-organizer/src/store/index.js\n*/\n\nconst logger = store => next => action => {\n    let result\n    console.groupCollapsed(\"dispatching\", action.type)\n    console.log('prev state', store.getState())\n    console.log('action', action)\n    result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n}\n\nconst saver = store => next => action => {\n    let result = next(action)\n    localStorage['redux-store'] = JSON.stringify(store.getState())\n    return result\n}\n\nconst storeFactory = (initialState=stateData) =>\n    applyMiddleware(logger, saver)(createStore)(\n        combineReducers({MaterialItems, ProductItems, Calresult}),\n        (localStorage['redux-store']) ?\n            JSON.parse(localStorage['redux-store']) :\n            initialState\n    )\n\nexport default storeFactory","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport storeFactory from './store';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = storeFactory()\n\nwindow.React = React\nwindow.store = store\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}